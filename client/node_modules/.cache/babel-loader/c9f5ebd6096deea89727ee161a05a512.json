{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cyrie\\\\Documents\\\\Projets\\\\supergym\\\\client\\\\src\\\\pages\\\\Statistiques.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistiques = () => {\n  _s();\n  const [calendarData, setCalendarData] = useState([]);\n  const [seancesParMois, setSeancesParMois] = useState([]);\n\n  // Charger les données depuis le fichier JSON avec vérification des erreurs\n  useEffect(() => {\n    fetch(\"http://localhost:5000/server/data/calendar.json\").then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error! Status: ${res.status}`);\n      }\n      return res.json();\n    }).then(data => {\n      console.log(\"Données du calendrier :\", data); // Vérification des données\n      setCalendarData(data);\n\n      // Calculer les séances par mois\n      const seancesParMoisCalc = data.reduce((acc, item) => {\n        const month = new Date(item.date).getMonth();\n        acc[month] = acc[month] ? acc[month] + 1 : 1;\n        return acc;\n      }, Array(12).fill(0));\n\n      // Transformer en format utilisable par Recharts\n      const formattedData = seancesParMoisCalc.map((count, index) => ({\n        mois: new Date(2025, index).toLocaleString(\"fr-FR\", {\n          month: \"long\"\n        }),\n        totalSeances: count\n      }));\n      console.log(\"Séances par mois :\", formattedData); // Vérification des données pour le graphe\n      setSeancesParMois(formattedData);\n    }).catch(err => console.error(\"Erreur lors du chargement des données :\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seances-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Nombre total de s\\xE9ances par mois\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: seancesParMois,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"mois\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"totalSeances\",\n          stroke: \"#8884d8\",\n          strokeWidth: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Statistiques, \"Gte7++BXrlcqXNAzcgGVPEVcn4k=\");\n_c = Statistiques;\nexport default Statistiques;\nvar _c;\n$RefreshReg$(_c, \"Statistiques\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","jsxDEV","_jsxDEV","Statistiques","_s","calendarData","setCalendarData","seancesParMois","setSeancesParMois","fetch","then","res","ok","Error","status","json","data","console","log","seancesParMoisCalc","reduce","acc","item","month","Date","date","getMonth","Array","fill","formattedData","map","count","index","mois","toLocaleString","totalSeances","catch","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","type","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["C:/Users/cyrie/Documents/Projets/supergym/client/src/pages/Statistiques.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from \"recharts\";\r\n\r\nconst Statistiques = () => {\r\n    const [calendarData, setCalendarData] = useState([]);\r\n    const [seancesParMois, setSeancesParMois] = useState([]);\r\n\r\n    // Charger les données depuis le fichier JSON avec vérification des erreurs\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:5000/server/data/calendar.json\")\r\n            .then((res) => {\r\n                if (!res.ok) {\r\n                    throw new Error(`HTTP error! Status: ${res.status}`);\r\n                }\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                console.log(\"Données du calendrier :\", data); // Vérification des données\r\n                setCalendarData(data);\r\n\r\n                // Calculer les séances par mois\r\n                const seancesParMoisCalc = data.reduce((acc, item) => {\r\n                    const month = new Date(item.date).getMonth();\r\n                    acc[month] = acc[month] ? acc[month] + 1 : 1;\r\n                    return acc;\r\n                }, Array(12).fill(0));\r\n\r\n                // Transformer en format utilisable par Recharts\r\n                const formattedData = seancesParMoisCalc.map((count, index) => ({\r\n                    mois: new Date(2025, index).toLocaleString(\"fr-FR\", { month: \"long\" }),\r\n                    totalSeances: count,\r\n                }));\r\n\r\n                console.log(\"Séances par mois :\", formattedData); // Vérification des données pour le graphe\r\n                setSeancesParMois(formattedData);\r\n            })\r\n            .catch((err) => console.error(\"Erreur lors du chargement des données :\", err));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"seances-chart\">\r\n            <h2>Nombre total de séances par mois</h2>\r\n            <ResponsiveContainer width=\"100%\" height={400}>\r\n                <LineChart data={seancesParMois}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"mois\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Line type=\"monotone\" dataKey=\"totalSeances\" stroke=\"#8884d8\" strokeWidth={2} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Statistiques;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}