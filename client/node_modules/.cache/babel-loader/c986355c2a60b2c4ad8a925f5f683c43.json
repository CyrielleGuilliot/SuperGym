{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cyrie\\\\Documents\\\\Projets\\\\supergym\\\\client\\\\src\\\\pages\\\\Statistiques.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistiques = () => {\n  _s();\n  const [calendarData, setCalendarData] = useState([]);\n  const [seancesData, setSeancesData] = useState([]);\n\n  // Charger les données depuis les fichiers JSON\n  useEffect(() => {\n    fetch(\"http://localhost:5000/server/data/calendar.json\").then(res => res.json()).then(data => setCalendarData(data)).catch(err => console.error(\"Erreur lors du chargement des données du calendrier:\", err));\n    fetch(\"http://localhost:5000/server/data/seances.json\").then(res => res.json()).then(data => setSeancesData(data)).catch(err => console.error(\"Erreur lors du chargement des données des séances:\", err));\n  }, []);\n\n  // 1. Nombre total de séances programmées\n  const totalSeances = calendarData.length;\n\n  // 2. Séances par mois\n  const seancesParMois = calendarData.reduce((acc, item) => {\n    const month = new Date(item.date).getMonth(); // Obtient le mois (0 pour janvier, 1 pour février, etc.)\n    acc[month] = acc[month] ? acc[month] + 1 : 1;\n    return acc;\n  }, Array(12).fill(0)); // Remplir un tableau de 12 mois avec 0 par défaut\n\n  // 3. Séances par type\n  const seancesParType = seancesData.reduce((acc, seance) => {\n    const type = seance.nom; // Utiliser le nom de la séance comme type pour l'exemple\n    acc[type] = acc[type] ? acc[type] + 1 : 1;\n    return acc;\n  }, {});\n\n  // Préparer les données pour les graphiques\n  const chartData1 = seancesParMois.map((count, index) => ({\n    month: new Date(2025, index).toLocaleString(\"fr-FR\", {\n      month: \"long\"\n    }),\n    sessions: count\n  }));\n  const chartData2 = Object.keys(seancesParType).map(type => ({\n    name: type,\n    value: seancesParType[type]\n  }));\n  const COLORS = [\"#ff5733\", \"#33ff57\", \"#66aad7\", \"#ff00ff\", \"#8080ff\", \"#46146b\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statistiques-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistiques des S\\xE9ances\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistique\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Total des s\\xE9ances programm\\xE9es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: totalSeances\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistique\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"S\\xE9ances par mois\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData1,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"sessions\",\n            stroke: \"#33ff57\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistique\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"S\\xE9ances par type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            data: chartData2,\n            dataKey: \"value\",\n            nameKey: \"name\",\n            innerRadius: 60,\n            outerRadius: 80,\n            fill: \"#8884d8\",\n            children: chartData2.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: COLORS[index % COLORS.length]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Statistiques, \"0fTR6MhIl+0krRz97DQtxTvZozQ=\");\n_c = Statistiques;\nexport default Statistiques;\nvar _c;\n$RefreshReg$(_c, \"Statistiques\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","PieChart","Pie","Cell","jsxDEV","_jsxDEV","Statistiques","_s","calendarData","setCalendarData","seancesData","setSeancesData","fetch","then","res","json","data","catch","err","console","error","totalSeances","length","seancesParMois","reduce","acc","item","month","Date","date","getMonth","Array","fill","seancesParType","seance","type","nom","chartData1","map","count","index","toLocaleString","sessions","chartData2","Object","keys","name","value","COLORS","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","stroke","nameKey","innerRadius","outerRadius","entry","_c","$RefreshReg$"],"sources":["C:/Users/cyrie/Documents/Projets/supergym/client/src/pages/Statistiques.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\r\nimport { PieChart, Pie, Cell } from \"recharts\";\r\n\r\nconst Statistiques = () => {\r\n    const [calendarData, setCalendarData] = useState([]);\r\n    const [seancesData, setSeancesData] = useState([]);\r\n\r\n    // Charger les données depuis les fichiers JSON\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:5000/server/data/calendar.json\")\r\n            .then((res) => res.json())\r\n            .then((data) => setCalendarData(data))\r\n            .catch((err) => console.error(\"Erreur lors du chargement des données du calendrier:\", err));\r\n\r\n        fetch(\"http://localhost:5000/server/data/seances.json\")\r\n            .then((res) => res.json())\r\n            .then((data) => setSeancesData(data))\r\n            .catch((err) => console.error(\"Erreur lors du chargement des données des séances:\", err));\r\n    }, []);\r\n\r\n    // 1. Nombre total de séances programmées\r\n    const totalSeances = calendarData.length;\r\n\r\n    // 2. Séances par mois\r\n    const seancesParMois = calendarData.reduce((acc, item) => {\r\n        const month = new Date(item.date).getMonth(); // Obtient le mois (0 pour janvier, 1 pour février, etc.)\r\n        acc[month] = acc[month] ? acc[month] + 1 : 1;\r\n        return acc;\r\n    }, Array(12).fill(0)); // Remplir un tableau de 12 mois avec 0 par défaut\r\n\r\n    // 3. Séances par type\r\n    const seancesParType = seancesData.reduce((acc, seance) => {\r\n        const type = seance.nom; // Utiliser le nom de la séance comme type pour l'exemple\r\n        acc[type] = acc[type] ? acc[type] + 1 : 1;\r\n        return acc;\r\n    }, {});\r\n\r\n    // Préparer les données pour les graphiques\r\n    const chartData1 = seancesParMois.map((count, index) => ({\r\n        month: new Date(2025, index).toLocaleString(\"fr-FR\", { month: \"long\" }),\r\n        sessions: count,\r\n    }));\r\n\r\n    const chartData2 = Object.keys(seancesParType).map((type) => ({\r\n        name: type,\r\n        value: seancesParType[type],\r\n    }));\r\n\r\n    const COLORS = [\"#ff5733\", \"#33ff57\", \"#66aad7\", \"#ff00ff\", \"#8080ff\", \"#46146b\"];\r\n\r\n    return (\r\n        <div className=\"statistiques-container\">\r\n            <h1>Statistiques des Séances</h1>\r\n\r\n            <div className=\"statistique\">\r\n                <h3>Total des séances programmées</h3>\r\n                <p>{totalSeances}</p>\r\n            </div>\r\n\r\n            <div className=\"statistique\">\r\n                <h3>Séances par mois</h3>\r\n                <ResponsiveContainer width=\"100%\" height={400}>\r\n                    <LineChart data={chartData1}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"month\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line type=\"monotone\" dataKey=\"sessions\" stroke=\"#33ff57\" />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n\r\n            <div className=\"statistique\">\r\n                <h3>Séances par type</h3>\r\n                <ResponsiveContainer width=\"100%\" height={400}>\r\n                    <PieChart>\r\n                        <Pie\r\n                            data={chartData2}\r\n                            dataKey=\"value\"\r\n                            nameKey=\"name\"\r\n                            innerRadius={60}\r\n                            outerRadius={80}\r\n                            fill=\"#8884d8\"\r\n                        >\r\n                            {chartData2.map((entry, index) => (\r\n                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                            ))}\r\n                        </Pie>\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Statistiques;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}