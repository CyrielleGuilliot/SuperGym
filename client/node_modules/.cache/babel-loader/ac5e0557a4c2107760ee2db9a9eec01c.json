{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cyrie\\\\Documents\\\\Projets\\\\supergym\\\\client\\\\src\\\\pages\\\\Statistiques.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SeancesParMois = () => {\n  _s();\n  const [calendarData, setCalendarData] = useState([]);\n  const [seancesParMois, setSeancesParMois] = useState([]);\n\n  // Charger les données depuis le fichier JSON\n  useEffect(() => {\n    fetch(\"http://localhost:5000/server/data/calendar.json\").then(res => res.json()).then(data => {\n      setCalendarData(data);\n      calculerSeancesParMois(data);\n    }).catch(err => console.error(\"Erreur lors du chargement des données du calendrier:\", err));\n  }, []);\n\n  // Calcul des séances par mois\n  const calculerSeancesParMois = data => {\n    const moisCounts = Array(12).fill(0);\n    data.forEach(item => {\n      const month = new Date(item.date).getMonth(); // Mois de 0 (janvier) à 11 (décembre)\n      moisCounts[month] += 1;\n    });\n    const moisData = moisCounts.map((count, index) => ({\n      mois: new Date(2025, index).toLocaleString(\"fr-FR\", {\n        month: \"long\"\n      }),\n      total: count\n    }));\n    setSeancesParMois(moisData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seances-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Nombre total de s\\xE9ances par mois\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: seancesParMois,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"mois\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          allowDecimals: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"total\",\n          stroke: \"#8884d8\",\n          activeDot: {\n            r: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(SeancesParMois, \"Gte7++BXrlcqXNAzcgGVPEVcn4k=\");\n_c = SeancesParMois;\nexport default SeancesParMois;\nvar _c;\n$RefreshReg$(_c, \"SeancesParMois\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","SeancesParMois","_s","calendarData","setCalendarData","seancesParMois","setSeancesParMois","fetch","then","res","json","data","calculerSeancesParMois","catch","err","console","error","moisCounts","Array","fill","forEach","item","month","Date","date","getMonth","moisData","map","count","index","mois","toLocaleString","total","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","allowDecimals","type","stroke","activeDot","r","_c","$RefreshReg$"],"sources":["C:/Users/cyrie/Documents/Projets/supergym/client/src/pages/Statistiques.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\nconst SeancesParMois = () => {\r\n    const [calendarData, setCalendarData] = useState([]);\r\n    const [seancesParMois, setSeancesParMois] = useState([]);\r\n\r\n    // Charger les données depuis le fichier JSON\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:5000/server/data/calendar.json\")\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setCalendarData(data);\r\n                calculerSeancesParMois(data);\r\n            })\r\n            .catch((err) => console.error(\"Erreur lors du chargement des données du calendrier:\", err));\r\n    }, []);\r\n\r\n    // Calcul des séances par mois\r\n    const calculerSeancesParMois = (data) => {\r\n        const moisCounts = Array(12).fill(0);\r\n        data.forEach((item) => {\r\n            const month = new Date(item.date).getMonth(); // Mois de 0 (janvier) à 11 (décembre)\r\n            moisCounts[month] += 1;\r\n        });\r\n\r\n        const moisData = moisCounts.map((count, index) => ({\r\n            mois: new Date(2025, index).toLocaleString(\"fr-FR\", { month: \"long\" }),\r\n            total: count,\r\n        }));\r\n\r\n        setSeancesParMois(moisData);\r\n    };\r\n\r\n    return (\r\n        <div className=\"seances-chart\">\r\n            <h2>Nombre total de séances par mois</h2>\r\n            <ResponsiveContainer width=\"100%\" height={400}>\r\n                <LineChart data={seancesParMois} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"mois\" />\r\n                    <YAxis allowDecimals={false} />\r\n                    <Tooltip />\r\n                    <Line type=\"monotone\" dataKey=\"total\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SeancesParMois;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}